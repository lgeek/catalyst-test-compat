signa(){
    #get rid of Testing use only watermark
    echo "66fb27a85ab1edb83099e9ad1326f379:5fd51799689cdc8a01abd894720bc24c57c2119a199cacec79b9d1982b14c24a:539d439d6b86d48106a1d0ce7745cb1856ca46ca3e89d48c07abd9cf7014c71a53cc449a6b80d4d901a0d0ce7245961a51c245913e80d48002fbd8997014c718" > etc/ati/signature
}


whisperer(){
    echo "----------------------------------------------------------------"
    echo "Automatic re-compilation is enabled now."
    echo "----------------------------------------------------------------"
    echo "Answer 'Yes' whenever pacman ask you about updating"
    echo "'linux-headers' in first place"
    echo "----------------------------------------------------------------"
    echo "Provide headers to your kernel ie:"
    echo "linux-headers if you are using linux."
    echo "Most of custom kernels provides own headers."
    echo "----------------------------------------------------------------"
    echo "Add nomodeset to your kernel line in /boot/grub/menu.lst , ie.:"
    echo "kernel /boot/vmlinuz-linux root=/dev/sda1 ro nomodeset"
    echo "----------------------------------------------------------------"
    echo "You can use the tool 'aticonfig' to generate an xorg.conf file."
    echo "--------------------- ^^^^^^^^^ --------------------------------"
    echo "IMPORTANT:"
    echo "fglrx was added into /etc/modules-load.d/catalyst.conf"
    echo "----------------------------------------------------------------"
    echo "	atieventsd (needs acpid pkg) on systemd:"
    echo "systemctl enable atieventsd"
    echo "systemctl start atieventsd"
    echo "----------------------------------------------------------------"
    echo "For more info and troubleshooting visit:"
    echo "http://wiki.archlinux.org/index.php/ATI_Catalyst"
    echo "----------------------------------------------------------------"
}

captain_hook(){
    # add hook fglrx to mkiniticpio
    hooks=$(grep ^HOOKS etc/mkinitcpio.conf | grep fglrx)
    if [ "$hooks" = "" ]; then
        sed 's/^HOOKS="\([^"]*\)"/HOOKS="\1 fglrx"/' -i etc/mkinitcpio.conf
    fi
    #add linux-headers to SyncFirst array of pacman.conf
    heads=$(grep ^SyncFirst etc/pacman.conf | grep linux-headers)
    if [ "$heads" = "" ]; then
	sed '/^SyncFirst/s|$| linux-headers|' -i etc/pacman.conf
    fi
}


rm_pxp(){
  # removing pXp support garbage
    #remove /usr/lib/catalystpxp/libGL.so* symlinks and dir
    if [ -d usr/lib/catalystpxp ]; then
      rm usr/lib/catalystpxp/libGL.so* &>/dev/null
      rmdir -p "usr/lib/catalystpxp/" --ignore-fail-on-non-empty &>/dev/null
    fi
    #remove usr/lib/xorg/modules/updates/extensions/libglx.so symlink and dir
    if [ -d usr/lib/xorg/modules/updates ]; then
      rm usr/lib/xorg/modules/updates/extensions/libglx.so &>/dev/null
      rmdir -p "usr/lib/xorg/modules/updates/extensions" --ignore-fail-on-non-empty &>/dev/null
      rmdir -p "usr/lib/xorg/modules/updates" --ignore-fail-on-non-empty &>/dev/null
    fi
}

pre_install(){
    rm_pxp
}

pre_upgrade(){
    rm_pxp
}

post_install(){
    # remove older heads
    sed '/^SyncFirst/s/ *kernel26-headers//' -i etc/pacman.conf

    captain_hook
    usr/bin/catalyst_build_module remove_old
    usr/bin/catalyst_build_module
    whisperer
    signa
}

post_upgrade(){
    captain_hook
    usr/bin/catalyst_build_module remove_old
    usr/bin/catalyst_build_module
    signa
}

pre_remove(){
    usr/bin/catalyst_build_module remove_all
}

post_remove(){
    # remove hook fglrx
    sed '/^HOOKS/s/ *fglrx//' -i etc/mkinitcpio.conf
    # remove heads
    sed '/^SyncFirst/s/ *linux-headers//' -i etc/pacman.conf

    # remove log
    rm -f var/log/catalyst-install.log

    echo "----------------------------------------------------------------"
    echo " Don't forget to recover your original xorg.conf file."
    echo "----------------------------------------------------------------"
}
